@using ShopOnline.Web.Shared
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href=""><span class="fas fa-shopping-cart" aria-hidden="true"></span>&nbsp; ShopOnline</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
      <ProductCategoriesNavMenu/>
         <div class="nav-item px-3">
            <NavLink class="nav-link" href="ShoppingCart">
                <span class="fas fa-shopping-cart" aria-hidden="true"></span> Shopping Cart (@shoppingCartItemCount)
            </NavLink>
        </div>
    </nav>
</div>

@code {


    [Inject]
    public IShoppingCartService ShoppingCartService { get; set; }

    private int shoppingCartItemCount = 0;

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        //El operador += se utiliza para "suscribir" el método
        // ShoppingCartChanged al evento OnShoppingCartChanged.
        //Esto significa que estás agregando(+=) el método ShoppingCartChanged
        // a la lista de métodos que se ejecutarán cuando OnShoppingCartChanged se dispare.
        ShoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }

    private void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {

        // cancelo la suscripcion al evento haciendo uso del -=
        ShoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}

@implements IDisposable



<a href="ShoppingCart" class="btn btn-info">
    <i class="oi oi-cart"></i>&nbsp;Cart
    <span class="badge bg-dark">@shoppingCartItemCount</span>

</a>

@code {


    [Inject]
    public IShoppingCartService ShoppingCartService { get; set; }

    private int shoppingCartItemCount = 0;

    protected override void OnInitialized()
    {
        //El operador += se utiliza para "suscribir" el método 
        // ShoppingCartChanged al evento OnShoppingCartChanged.
        //Esto significa que estás agregando(+=) el método ShoppingCartChanged 
        // a la lista de métodos que se ejecutarán cuando OnShoppingCartChanged se dispare.
        ShoppingCartService.OnShoppingCartChanged += ShoppingCartChanged;
    }

    protected void ShoppingCartChanged(int totalQty)
    {
        shoppingCartItemCount = totalQty;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {

        // cancelo la suscripcion al evento haciendo uso del -=
        ShoppingCartService.OnShoppingCartChanged -= ShoppingCartChanged;
    }
}

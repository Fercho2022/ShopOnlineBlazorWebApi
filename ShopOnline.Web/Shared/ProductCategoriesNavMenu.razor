


@if(ProductCategoryDtos==null && ErrorMessage == null)
{
    <DisplaySpinner/>
}
else if (ErrorMessage != null)
{
    <DisplayError ErrorMessage="@ErrorMessage"/>
}
else
{
    @foreach(var productCategory in ProductCategoryDtos)
    {
        var link = "/productsByCategory/" + productCategory.Id;

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="@link">
                <span class="@productCategory.IconCSS"></span>&nbsp;@productCategory.Name
            </NavLink>
        </div>


    }
}






@code {

    [Inject]
    public IProductService ProductService { get; set; }

    public IEnumerable<ProductCategoryDto>  ProductCategoryDtos { get; set; }

    public string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ProductCategoryDtos = await ProductService.GetProductCategories();
        }
        catch (Exception ex)
        {

            ErrorMessage = ex.Message;
        }
       
    }

}
